<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Forgot" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.3.0.20. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="Accept" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
          </elementProp>
          <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
            <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
            <stringProp name="Header.value">1</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">ktpm-kc04.somee.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Load page PasswordRecovery" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">PasswordRecovery.aspx</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Submit Username" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="__VIEWSTATEGENERATOR" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">__VIEWSTATEGENERATOR</stringProp>
                  <stringProp name="Argument.value">6CB791D5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="__EVENTARGUMENT" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">__EVENTARGUMENT</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="__VIEWSTATE" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">__VIEWSTATE</stringProp>
                  <stringProp name="Argument.value">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</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ctl00$Navigation$MainMenuRepeater$ctl03$ParentIdHiddenField" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ctl00$Navigation$MainMenuRepeater$ctl03$ParentIdHiddenField</stringProp>
                  <stringProp name="Argument.value">4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ctl00$Navigation$MainMenuRepeater$ctl00$ParentIdHiddenField" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ctl00$Navigation$MainMenuRepeater$ctl00$ParentIdHiddenField</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="__EVENTTARGET" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">__EVENTTARGET</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ctl00$MainContent$PasswordRecoveryMember$UserNameContainerID$SubmitButton" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ctl00$MainContent$PasswordRecoveryMember$UserNameContainerID$SubmitButton</stringProp>
                  <stringProp name="Argument.value">Submit</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ctl00$Navigation$MainMenuRepeater$ctl04$ParentIdHiddenField" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ctl00$Navigation$MainMenuRepeater$ctl04$ParentIdHiddenField</stringProp>
                  <stringProp name="Argument.value">5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="__EVENTVALIDATION" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">__EVENTVALIDATION</stringProp>
                  <stringProp name="Argument.value">oMDslh+39n/DVfBt+FPE1LavcwKCI8J1u4KiaT6RMAZthW9YvO2HyQjDHg9rZNrouQKEdB0IO300McRuX0RQD73RCKr1iX5/B0NmCD2yqtPz0aikv0jlS8PnGM1jMXghFWeAgXC5ZTbEH5overs4jJXc0n7/ooMQVEQd85RC28fKF/Q0lzKoxDMBRFnMkugg/p4k1tQ1PQAvPLyAUXHZFsbVJFomdcD2W196Y9Xkkie771+Tg5yF+6hKJsLAJSk8pXDfU1IbMPfrD6KJStYK7l5lBZMLR44hQCshAYZS/v5puqSFTNZd3U97pItYpiEkLnWEAnRFznUguLuEsBIvC/N4vmmLtjoerYH0kCZv7ZT0ZOABLlX9+AnCvXAbdOKzANGCPWIVrDHLUNLRTfBjTmz6AwQD86FFnz9Ro8upLgM=</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ctl00$Header$TextBoxKeyword" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ctl00$Header$TextBoxKeyword</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ctl00$Navigation$MainMenuRepeater$ctl02$ParentIdHiddenField" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ctl00$Navigation$MainMenuRepeater$ctl02$ParentIdHiddenField</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ctl00$MainContent$PasswordRecoveryMember$UserNameContainerID$UserName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ctl00$MainContent$PasswordRecoveryMember$UserNameContainerID$UserName</stringProp>
                  <stringProp name="Argument.value">${username}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="__PREVIOUSPAGE" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">__PREVIOUSPAGE</stringProp>
                  <stringProp name="Argument.value">txic3x0aGLqiJQyrEBwFZj_LCjMnCp8clf7BkRPq5b7_8MJmKIEMNv9fIYrlX4x73jkya06-EahjHX3oZZ6jcxCY8goqNdNhCDjrWXuFwA41</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="__LASTFOCUS" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">__LASTFOCUS</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ctl00$Navigation$MainMenuRepeater$ctl01$ParentIdHiddenField" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ctl00$Navigation$MainMenuRepeater$ctl01$ParentIdHiddenField</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">PasswordRecovery.aspx</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">7595.0</stringProp>
              <stringProp name="ConstantTimer.delay">3797.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 7595 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1877658537">Identity Confirmation</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
              <stringProp name="filename">C:/Users/Administrator/Desktop/Data_Username.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">username</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter"></stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
